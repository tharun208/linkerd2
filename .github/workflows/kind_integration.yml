name: KinD integration
on:
  pull_request: {}
  push:
    paths-ignore:
    - '*.md'
    - '**/*.md'
    branches:
    - main
env:
  GH_ANNOTATION: true
jobs:
  docker_build:
    name: Docker build
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      # actions/checkout@v2
      uses: actions/checkout@722adc6
    - name: Set environment variables from scripts
      run: |
        . bin/_tag.sh
        echo ::set-env name=TAG::$(CI_FORCE_CLEAN=1 bin/root-tag)

        . bin/_docker.sh
        echo ::set-env name=DOCKER_REGISTRY::$DOCKER_REGISTRY
    - name: Setup SSH config for Packet
      if: github.event_name == 'push' || !github.event.pull_request.head.repo.fork
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/id && chmod 600 ~/.ssh/id
        echo "${{ secrets.DOCKER_SSH_CONFIG }}"  > ~/.ssh/config
        echo "${{ secrets.DOCKER_PRIVATE_KEY }}" > ~/.ssh/id
        echo "${{ secrets.DOCKER_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        ssh linkerd-docker docker version
        echo ::set-env name=DOCKER_HOST::ssh://linkerd-docker
    - name: Build docker images
      env:
        DOCKER_TRACE: 1
      run: |
        export PATH="`pwd`/bin:$PATH"
        bin/docker-build
    - name: Create artifact with CLI and image archives
      env:
        ARCHIVES: /home/runner/archives
      run: |
        mkdir -p $ARCHIVES

        for image in proxy controller web cni-plugin debug cli-bin grafana; do
          docker save "$DOCKER_REGISTRY/$image:$TAG" > $ARCHIVES/$image.tar || tee save_fail &
        done

        # save cli's as artifacts
        cp -r ./target/cli $ARCHIVES/cli

        # Wait for `docker save` background processes to complete. Exit early
        # if any job failed.
        wait < <(jobs -p)
        test -f save_fail && exit 1 || true
    # `with.path` values do not support environment variables yet, so an
    # absolute path is used here.
    #
    # https://github.com/actions/upload-artifact/issues/8
    - name: Upload artifact
      # actions/upload-artifact@v1
      uses: actions/upload-artifact@3446296
      with:
        name: image-archives
        path: /home/runner/archives
  # todo: Keep in sync with `release.yml`
  windows_static_cli_tests:
    name: Static CLI tests (windows)
    runs-on: windows-latest
    needs: [docker_build]
    steps:
    - name: Checkout code
      # actions/checkout@v2
      uses: actions/checkout@722adc6
    - name: Try to load cached Go modules
      # actions/cache@v1.1.2
      uses: actions/cache@70655ec
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Download image archives
      # actions/download-artifact@v1
      uses: actions/download-artifact@18f0f59
      with:
        name: image-archives
    - name: Run bin/root-tag
      shell: bash
      run: |
        echo ::set-env name=TAG::$(CI_FORCE_CLEAN=1 bin/root-tag)
        echo $TAG
    - name: Install linkerd CLI
      id: install_cli
      run: |
        $image="gcr.io/linkerd-io/cli-bin:$TAG"
        echo $TAG
        docker pull $image
        $id = (docker create $image)
        docker cp "${id}:/out/linkerd-windows" "$HOME\linkerd.exe"
    - name: Run CLI Integration tests
      run: |
        go test --failfast --mod=readonly ".\test\cli" --linkerd=$HOME\linkerd.exe --cli-tests -v
  kind_integration_tests:
    strategy:
      matrix:
        integration_test: [custom-domain, deep, external-issuer, helm, helm-upgrade, uninstall, upgrade-edge, upgrade-stable]
    needs: [docker_build]
    name: Integration tests (${{ matrix.integration_test }})
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      # actions/checkout@v2
      uses: actions/checkout@722adc6
    - name: Try to load cached Go modules
      # actions/cache@v1.1.2
      uses: actions/cache@70655ec
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Set environment variables from scripts
      run: |
        . bin/_tag.sh
        echo ::set-env name=TAG::$(CI_FORCE_CLEAN=1 bin/root-tag)

        . bin/_docker.sh
        echo ::set-env name=DOCKER_REGISTRY::$DOCKER_REGISTRY
    - name: Setup SSH config for Packet
      if: github.event_name == 'push' || !github.event.pull_request.head.repo.fork
      run: |
        mkdir -p ~/.ssh/
        touch ~/.ssh/id && chmod 600 ~/.ssh/id
        echo "${{ secrets.DOCKER_SSH_CONFIG }}"  > ~/.ssh/config
        echo "${{ secrets.DOCKER_PRIVATE_KEY }}" > ~/.ssh/id
        echo "${{ secrets.DOCKER_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
    - name: Download image archives (Forked repositories)
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork
      # actions/download-artifact@v1
      uses: actions/download-artifact@18f0f59
      with:
        name: image-archives
    - name: Load cli-bin image into local docker images
      if: github.event_name == 'push' || !github.event.pull_request.head.repo.fork
      run: |
        # `docker load` only accepts input from STDIN, so pipe the image
        # archive into the command.
        #
        # In order to pipe the image archive, set `DOCKER_HOST` for a single
        # command and `docker save` the CLI image from the Packet host.
        DOCKER_HOST=ssh://linkerd-docker docker save "$DOCKER_REGISTRY/cli-bin:$TAG" | docker load
    - name: Load cli-bin image into local docker images (Forked repositories)
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork
      run: docker load < image-archives/cli-bin.tar
    - name: Install CLI
      run: |
        # Copy the CLI out of the local cli-bin container.
        container_id=$(docker create "$DOCKER_REGISTRY/cli-bin:$TAG")
        docker cp $container_id:/out/linkerd-linux "$HOME/.linkerd"

        # Validate the CLI version matches the current build tag.
        [[ "$TAG" == "$($HOME/.linkerd version --short --client)" ]]
    - name: Run integration tests
      if: github.event_name == 'push' || !github.event.pull_request.head.repo.fork
      run: |
        bin/tests --images --images-host ssh://linkerd-docker --name ${{ matrix.integration_test }} "$HOME/.linkerd"
    - name: Run integration tests (Forked repositories)
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork
      run: |
        bin/tests --images --name ${{ matrix.integration_test }} "$HOME/.linkerd"
